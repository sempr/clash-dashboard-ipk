name: Deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dashboard code
        uses: actions/checkout@v3
        with:
          repository: Dreamacro/clash-dashboard
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "17.x"
          cache: pnpm
      - name: Install package and build
        run: |
          pnpm install
          pnpm build
      - name: Check Commit ID
        run: |
          COMMIT_ID=$(git log --format="%H" -n 1)
          echo $COMMIT_ID > commit.txt
          echo "COMMIT_ID=${COMMIT_ID}" >> $GITHUB_ENV
          OLD_URL=$(curl -fsSL https://github.com/sempr/clash-dashboard-ipk/releases/latest | grep "commit.txt"| grep href | awk -F'"' '{print $2}')
          if [ "$OLD_URL" -ne "" ]; then
            curl -fsSL -o old_commit.txt https://github.com/$OLD_URL
          fi
          MSG=$(diff commit.txt old_commit.txt >/dev/null 2>&1; echo $?)
          if [ "$MSG" -eq "0" ];then
            echo "NEED_PUB=0" >> $GITHUB_ENV
          else
            echo "NEED_PUB=1" >> $GITHUB_ENV
          fi
      - name: Build IPK
        if: ${{ env.NEED_PUB == '1' }}
        run: |
          mkdir -p output
          cp commit.txt output/
          mkdir -p control
          PKG_NAME="clash-dashboard"
          TAG_NAME=$(date +%Y%m%d%H%M)-${COMMIT_ID}

          cat <<EOF >control/control
          Package: ${PKG_NAME}
          Version: 1.0-${TAG_NAME}
          SourceName: ${PKG_NAME}
          Architecture: x86_64
          Description:  ${PKG_NAME}
          EOF

          pushd control
          tar cvzf ../control.tar.gz ./*
          popd

          mkdir -p data/www
          cp -r dist data/www/clash

          pushd data
          tar cvzf ../data.tar.gz ./*
          popd

          echo 2.0 >debian-binary
          tar cvzf ${PKG_NAME}_1.0-${TAG_NAME}.ipk ./control.tar.gz ./data.tar.gz ./debian-binary
          rm -rf control control.tar.gz data.tar.gz data debian-binary
          mkdir -p output
          mv ${PKG_NAME}_1.0-${TAG_NAME}.ipk output
          echo "NEED_PUB=1" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "RELEASE_NAME=Released on ${TAG_NAME}" >> $GITHUB_ENV
      - if: ${{ env.NEED_PUB == '1' }}
        name: Release and upload assets
        uses: softprops/action-gh-release@v0.1.6
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
